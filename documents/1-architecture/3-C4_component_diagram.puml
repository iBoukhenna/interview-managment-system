@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
' uncomment the following line and comment the first to use locally
' !include C4_Component.puml

LAYOUT_WITH_LEGEND()

title Component diagram for Interview Management System - API Application

Container(spa, "Single Page Application", "JavaScript, Angular", "Provides all the interview system functionality to recruiter and technical advisor via their web browser.")
Container(ma, "Mobile App", "C#, Xamarin", "Provides a limited subset of interview system functionality to recruiter and technical advisor via their mobile device.")
ContainerDb(db, "Database", "Relational Database Schema", "Stores Information regarding the interviews, the recruiters, the technical advisors ...")
System_Ext(email_system, "E-Mail System")
System_Ext(unit4_system, "Unit4 System")

Container_Boundary(api, "API Application") {

    Component(technical_advisor_controller, "Technical Advisor Controller", "Spring Rest Controller", "CRUD TechnicalAdvisor APIs")
    Rel(spa, technical_advisor_controller, "Uses", "JSON/HTTPS")
    Rel(ma, technical_advisor_controller, "Uses", "JSON/HTTPS")

    Component(recruiter_controller, "Recruiter Controller", "Spring Rest Controller", "CRUD Recruiter APIs")
    Rel(spa, recruiter_controller, "Uses", "JSON/HTTPS")
    Rel(ma, recruiter_controller, "Uses", "JSON/HTTPS")

    Component(line_business_controller, "Line Of Business Controller", "Spring Rest Controller", "CRUD LineOfBusiness APIs")
    Rel(spa, line_business_controller, "Uses", "JSON/HTTPS")
    Rel(ma, line_business_controller, "Uses", "JSON/HTTPS")

    Component(job_position_controller, "Job Position Controller", "Spring Rest Controller", "CRUD JobPosition APIs")
    Rel(spa, job_position_controller, "Uses", "JSON/HTTPS")
    Rel(ma, job_position_controller, "Uses", "JSON/HTTPS")

    Component(sign_in_controller, "Sign In Controller", "Spring Rest Controller", "Allows users to sign in to the system")
    Rel(spa, sign_in_controller, "Uses", "JSON/HTTPS")
    Rel(ma, sign_in_controller, "Uses", "JSON/HTTPS")

    Component(interview_controller, "Interview Controller", "Spring Rest Controller", "CRUD Interview APIs")
    Rel(spa, interview_controller, "Uses", "JSON/HTTPS")
    Rel(ma, interview_controller, "Uses", "JSON/HTTPS")

    Component(technical_advisor_component, "Technical Advisor Component", "Spring Bean", "Provides functionality related to technical advisor")
    Rel(technical_advisor_controller, technical_advisor_component, "Uses")

    Component(recruiter_component, "Recruiter Component", "Spring Bean", "Provides functionality related to recruiter")
    Rel(recruiter_controller, recruiter_component, "Uses")

    Component(line_business_component, "Line Of Business Component", "Spring Bean", "Provides functionality related to line of business")
    Rel(line_business_controller, line_business_component, "Uses")

    Component(job_position_component, "Job Position Component", "Spring Bean", "Provides functionality related to job position")
    Rel(job_position_controller, job_position_component, "Uses")

    Component(security_component, "Security Component", "Spring Bean", "Provides functionality related to singing in, changing password, ...")
    Rel(sign_in_controller, security_component, "Uses")

    Component(interview_component, "Interview Component", "Spring Bean", "Provides functionality related to interview")
    Rel(interview_controller, interview_component, "Uses")

    Component(unit4_component, "Unit4 Component", "Spring Bean", "Provides functionality related to unit4")
    Rel(recruiter_component, unit4_component, "Uses")
    Rel(technical_advisor_component, unit4_component, "Uses")

    Component(notification_component, "Notification Component", "Kafka", "Provides functionality related to notifications")
    Rel_Neighbor(interview_component, notification_component, "Produce")
    Rel_Back(interview_component, notification_component, "Consume")
    Rel_Neighbor(job_position_component, notification_component, "Produce")
    Rel_Back(job_position_component, notification_component, "Consume")
    Rel_Neighbor(line_business_component, notification_component, "Produce")
    Rel_Back(line_business_component, notification_component, "Consume")
    Rel_Neighbor(recruiter_component, notification_component, "Produce")
    Rel_Back(recruiter_component, notification_component, "Consume")
    Rel_Neighbor(recruiter_component, notification_component, "Produce")
    Rel_Back(recruiter_component, notification_component, "Consume")
    Rel_Neighbor(technical_advisor_component, notification_component, "Produce")
    Rel_Back(technical_advisor_component, notification_component, "Consume")
    Rel_Neighbor(security_component, notification_component, "Produce")
    Rel_Back(security_component, notification_component, "Consume")

}

Rel(interview_component, db, "CRUD Interview", "JDBC")
Rel(job_position_component, db, "CRUD Job Position", "JDBC")
Rel(line_business_component, db, "CRUD Interview", "JDBC")
Rel(recruiter_component, db, "CRUD Interview", "JDBC")
Rel(technical_advisor_component, db, "CRUD Interview", "JDBC")
Rel(security_component, db, "CRUD User", "JDBC")
Rel(notification_component, db, "CRUD Notification", "JDBC")

Rel_Neighbor(interview_component, email_system, "Send Email", "SMTP")
Rel(unit4_component, unit4_system, "Uses", "JSON/HTTPS")

@enduml